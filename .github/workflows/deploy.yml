name: CI/CD Deployment to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: "my-cluster"
  GKE_REGION: "us-central1"
  DEPLOYMENT_NAME: "mlops-app"
  REPOSITORY: "us-central1-docker.pkg.dev/apt-momentum-355109/my-repo"
  IMAGE: "us-central1-docker.pkg.dev/apt-momentum-355109/my-repo/mlops-app"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Authenticate to Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Step 3: Set up gcloud SDK
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Step 4: Install GKE auth plugin (with GPG key fix)
      - name: Install GKE gcloud auth plugin
        run: |
          echo "Adding Google Cloud public key..."
          curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
          
          echo "Adding Google Cloud SDK repo..."
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          
          sudo apt-get update -y
          sudo apt-get install -y google-cloud-sdk google-cloud-sdk-gke-gcloud-auth-plugin
          
          echo "Verifying plugin..."
          gke-gcloud-auth-plugin --version || true

      # Step 5: Configure Docker for Artifact Registry
      - name: Configure Docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      # Step 6: Build & push Docker image
      - name: Build and Push Image
        run: |
          docker build -t $IMAGE:$GITHUB_SHA .
          docker push $IMAGE:$GITHUB_SHA

      # Step 7: Get GKE cluster credentials
      - name: Get GKE Credentials
        run: gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_REGION --project $PROJECT_ID

      # Step 8: Deploy to Kubernetes
      - name: Deploy to GKE
        run: |
          kubectl apply -f kubernetes-deployment.yaml --validate=false
          kubectl set image deployment/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=$IMAGE:$GITHUB_SHA
          kubectl rollout status deployment/$DEPLOYMENT_NAME
